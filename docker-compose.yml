version: "2.3"

services:
  # micros docekr image build
  roscore:
      image: ros:noetic-ros-core-focal
      # build:
      #   context: .
      #   dockerfile: Dockerfile.ros2.micro_ros
      environment:
        - "ROS_DOMAIN_ID=0"
        - "ROS_IP=192.168.29.3"
        - "ROS_MASTER_URI=http://192.168.29.3:11311"
      command: bash -c "roscore"
      # devices:
      #   - /octo
      tty: true
      privileged: false
      network_mode: host
      # extra_hosts:
      #   - octo:192.168.29.3"
      ipc: host
      restart: unless-stopped

  # turtlesim:
  #     image: ros:noetic-ros-core-focal 
  #     # build:
  #     #   context: .
  #     #   dockerfile: Dockerfile.ros2.micro_ros
  #     environment:
  #       - "ROS_DOMAIN_ID=0"
  #       - "ROS_IP=192.168.1.6"
  #       - "ROS_MASTER_URI=http://192.168.1.6:11311"
  #     command: bash -c "rostopic list"
  #     # devices:
  #     #   - /octo
  #     tty: true
  #     privileged: false
  #     network_mode: host
  #     ipc: host
  #     restart: unless-stopped

  # talker:
  #   # build: ros-tutorials/.
  #   image: toddsampson:ros-indigo-tutorials
  #   container_name: talker
  #   hostname: octo
  #   net: rosdocker
  #   environment:
  #       - "ROS_HOSTNAME=octo"rosmaster:
#   image: ros:latest
#   container_name: rosmaster
#   hostname: rosmaster
#   net: rosdocker
#   ports:
#        - "11311:11311"
#   command: roscore
  #       - "ROS_MASTER_URI=http://rosmaster:11311"
  #   # command: bash
  #   command: rosrun roscpp_tutorials talker

# ROS Tutorial Listener
# listener:
#   # build: ros-tutorials/.
#   image: toddsampson:ros-indigo-tutorials
#   container_name: listener
#   hostname: listener
#   net: rosdocker
#   environment:
#       - "ROS_HOSTNAME=listener"
#       - "ROS_MASTER_URI=http://rosmaster:11311"
#   # command: bash
#   command: rosrun roscpp_tutorials listener

# # ROS Structure Sensor
# structure_sensor:
#   # build: ros-structure_sensor/.
#   image: toddsampson/ros-indigo-structure_sensor
#   container_name: structure_sensor
#   hostname: structure_sensor
#   volumes_from:
#       - "rosmaster"
#   net: rosdocker
#   devices:
#       - "/dev/bus/usb:/dev/bus/usb"
#   volumes:
#       - "/tmp/.X11-unix:/tmp/.X11-unix"
#   environment:
#       - "DISPLAY=$DISPLAY"
#       - "ROS_HOSTNAME=structure_sensor"
#       - "ROS_MASTER_URI=http://rosmaster:11311"
#   # command: bash
#   command: roslaunch openni2_launch openni2.launch rgb_processing:=False depth_registration:=True

# # ROS USBCAM
# usbcam:
#   # build: ros-usbcam/.
#   image: toddsampson/ros-indigo-usbcam
#   container_name: usbcam
#   hostname: usbcam
#   net: rosdocker
#   devices:
#       - "/dev/bus/usb:/dev/bus/usb"
#   environment:
#       - "ROS_HOSTNAME=usbcam"
#       - "ROS_MASTER_URI=http://rosmaster:11311"
#   command: rosrun libuvc_camera camera_node _height:=480 _width:=640 _vendor:=2084 _video_mode:=uncompressed _frame_rate:=30

# ROS Leap Motion
# leap_motion:
#   # build: ros-leap_motion/.
#   image: toddsampson/ros-indigo-leap_motion
#   container_name: leap_motion
#   hostname: leap_motion
#   volumes_from:
#       - "rosmaster"
#   net: rosdocker
#   privileged: true
#   devices:
#       - "/dev/bus/usb:/dev/bus/usb"
#   volumes:
#       # - "/tmp/.X11-unix:/tmp/.X11-unix:rw"
#       - "/tmp/.X11-unix:/tmp/.X11-unix"
#   environment:
#       - "QT_X11_NO_MITSHM=1"
#       - "DISPLAY=$DISPLAY"
#       - "ROS_HOSTNAME=leap_motion"
#       - "ROS_MASTER_URI=http://rosmaster:11311"
#   ports:
#       - "6437:6437"
#   command: bash
  # command: rosrun leap_motion sender.py

# ROS Image View
# image_view:
#   # build: ros-image_pipeline/.
#   image: toddsampson/ros-indigo-image_pipeline
#   container_name: image_view
#   hostname: image_view
#   volumes_from:
#       - "rosmaster"
#   net: rosdocker
#   volumes:
#       - "/tmp/.X11-unix:/tmp/.X11-unix"
#   environment:
#       - "DISPLAY=$DISPLAY"
#       - "ROS_HOSTNAME=image_view"
#       - "ROS_MASTER_URI=http://rosmaster:11311"
#   command: rosrun image_view image_view image:=/image_raw

# ROS RVIZ
# rviz:
#   # build: ros-rviz/.
#   image: toddsampson/ros-indigo-rviz
#   container_name: rviz
#   hostname: rviz
#   net: rosdocker
#   volumes:
#     - "/tmp/.X11-unix:/tmp/.X11-unix"
#   environment:
#       - "DISPLAY=$DISPLAY"
#       - "ROS_HOSTNAME=rviz"
#       - "ROS_MASTER_URI=http://rosmaster:11311"
#   command: rosrun rviz rviz

# ROS Actionlib
# actionlib:
#   build: ros-actionlib/.
#   # image: toddsampson:ros-indigo-actionlib
#   container_name: actionlib
#   hostname: actionlib
#   net: rosdocker
#   environment:
#       - "ROS_HOSTNAME=actionlib"
#       - "ROS_MASTER_URI=http://rosmaster:11311"
#   command: bash

# ROS Kinect
# kinect:
#   # build: ros-kinect/.
#   image: toddsampson:ros-indigo-kinect
#   container_name: kinect
#   hostname: kinect
#   net: rosdocker
#   devices:
#       - "/dev/bus/usb:/dev/bus/usb"
#   environment:
#       - "ROS_HOSTNAME=kinect"
#       - "ROS_MASTER_URI=http://rosmaster:11311"
#   # command: bash
#   command: roslaunch freenect_launch freenect.launch depth_registration:=true


# ROS Kinect2
# kinect2:
#   build: ros-kinect2/.
#   # image: toddsampson:ros-indigo-kinect2
#   container_name: kinect2
#   hostname: kinect2
#   net: rosdocker
#   devices:
#       - "/dev/bus/usb:/dev/bus/usb"
#   environment:
#       - "ROS_HOSTNAME=kinect2"
#       - "ROS_MASTER_URI=http://rosmaster:11311"
#   # command: bash
#   command: roslaunch kinect2_bridge kinect2_bridge.launch


# ROS MASTER (ROSCORE)
# rosmaster:
#   image: ros:latest
#   container_name: rosmaster
#   hostname: rosmaster
#   net: rosdocker
#   ports:
#        - "11311:11311"
#   command: roscore
